<?php

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;
use App\Application\Sonata\UserBundle\Entity\User as SonataBase;

/**
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */

/**
 * @ORM\Entity
 * @ORM\Table(name="fos_user_user")
 */
class User extends SonataBase
{
    /**
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     * @ORM\Column(type="integer")
     */
    protected $id;


    /**
     * @ORM\OneToMany(targetEntity="App\Entity\Article", mappedBy="user")
     */
    protected $articles;

    /**
     * @ORM\OneToMany(targetEntity="App\Entity\ArticleComment", mappedBy="user")
     */
    protected $comments;


    /**
     * @ORM\Column(type="string", nullable=true)
     */
    protected $klasse;

    public function getId()
    {
        return $this->id;
    }

    /**
     * @return mixed
     */
    public function getArticles()
    {
        return $this->articles;
    }

    /**
     * @param mixed $articles
     */
    public function setArticles($articles)
    {
        $this->articles = $articles;
    }

    /**
     * @return mixed $article
     */
    public function addArticle(Article $article)
    {
        $this->articles[] = $article;
        $article->setUser($this);

        return $this;
    }

    /**
     * @return mixed
     */
    public function getComments()
    {
        return $this->comments;
    }

    /**
     * @param mixed $comments
     */
    public function setComments($comments)
    {
        $this->comments = $comments;
    }

    /**
     * @return mixed $article
     */
    public function addComment(ArticleComment $comment)
    {
        $this->comments[] = $comment;
        $comment->setUser($this);

        return $this;
    }

    /*
     * //TODO DAS Ergänzen von Artikeln auf der USER-Seite funktioniert nicht. Schätze es muss erst setUser den alten User gegen den neuen ersetzen?
     *
    */


    /**
     * @return mixed
     */
    public function getKlasse()
    {
        return $this->klasse;
    }

    /**
     * @param mixed $klasse
     */
    public function setKlasse($klasse): void
    {
        $this->klasse = $klasse;
    }


    public function getAvatar()
    {
        return 'http://thecatapi.com/api/images/get?format=src&type=gif&r='.random_int(100, 999);
    }


    /**
     * Overridden so that username is now optional
     *
     * @param string $email
     * @return User
     */
    public function setEmail($email)
    {
        $this->setUsername($email);
        return parent::setEmail($email);
    }

    /**
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }



    public function __construct()
    {
        parent::__construct();
        $this->articles = new ArrayCollection();
        $this->comments = new ArrayCollection();
    }

    public function __toString()
    {
        return $this->getUsername();
    }
}
